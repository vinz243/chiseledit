buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
        maven {
            url = "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
        classpath "com.github.breadmoirai:github-release:2.2.0"
    }
}

/*plugins {
    id "com.github.breadmoirai.github-release" version "2.2.0"
}*/

apply plugin: "net.minecraftforge.gradle.forge"


version = modVersion
group= modGroup
archivesBaseName = modBaseName

minecraft {
    version = project.forgeVersion
    runDir = "run"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = project.mcpVersion
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

repositories {
    mavenCentral()
}

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')

    testCompile 'junit:junit:4.12'
}

//githubRelease {
//    owner "vinz243" // default is the last part of your group. Eg group: "com.github.breadmoirai" => owner: "breadmoirai"
//    repo "chiseledit" // by default this is set to your project name
//    targetCommitish "master" // by default this is set to "master"
//    draft false // by default this is false
//    prerelease true // by default this is false
//    releaseAssets "build/libs/{modBaseName}-{version}.jar"
//}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        // replace version and mcversion
        expand "version":project.version, "mcversion":project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}
